#include "APBApp.h"APBApp::APBApp(){    surfTest = NULL;    surfDisplay = NULL;    running = true;    paused = false;    scr_w = 800;    scr_h = 600;    scr_bpp = 16;}int APBApp::setDisplayProperties(int w, int h, int bpp){    if (w > 0 && h > 0 && (bpp == 8 || bpp == 16 || bpp == 24 || bpp == 32))    {        scr_w = w;        scr_h = h;        scr_bpp = bpp;        return 0;    }    fprintf(stderr, "Requested display properties are illegal! Reverting to default settings.");    return 1;}int APBApp::execute(){    if (init() == false)    {        fprintf(stderr,"Failed to initialize application");        return -1;    }    SDL_Event Event;    while (running)    {        while (SDL_PollEvent(&Event))        {            APBApp::event(&Event);        }        if (!paused)        {            loop();            render();        }    }    cleanup();    return 0;}void APBApp::render(){    SDL_FillRect( surfDisplay, NULL, 0 );    for (int j = 0; j < surfDisplay->h; j+=surfTest->w)    {        for (int i = 0; i < surfDisplay->w; i+=surfTest->w)        {            APBSurface::draw(surfDisplay, surfTest, i, j, 0, NumberTestSprite.getCurrentFrame() * surfTest->w, surfTest->w, surfTest->w);        }    }    SDL_Flip(surfDisplay);}void APBApp::cleanup(){    SDL_FreeSurface(surfTest);    SDL_FreeSurface(surfDisplay);    SDL_Quit();}bool APBApp::init(){    if (SDL_Init(SDL_INIT_EVERYTHING) < 0)    {        fprintf(stderr,"Failed to initialize SDL");        return false;    }    if ((surfDisplay = SDL_SetVideoMode(scr_w, scr_h, scr_bpp, SDL_HWSURFACE | SDL_DOUBLEBUF)) == NULL)    {        fprintf(stderr,"Failed to set video mode");        return false;    }    if ((surfTest = APBSurface::load("data/graphics/numbertest_small.png")) == NULL)    {        fprintf(stderr,"Failed to load data files");        return false;    }    NumberTestSprite.maxFrames = surfTest->h/surfTest->w;    NumberTestSprite.oscillate = true;    return true;}void APBApp::loop(){    NumberTestSprite.animate();}void APBApp::event(SDL_Event* Event){    APBEvent::event(Event);}void APBApp::onExit(){    running = false;}void APBApp::onKeyDown(SDLKey sym, SDLMod mod, Uint16 unicode){    if (paused)    {        if (sym == SDLK_p)        {            togglePause();        }        if (sym == SDLK_ESCAPE)        {            running = false;        }    }    else    {        if (sym == SDLK_ESCAPE)        {            running = false;        }        if (sym == SDLK_p)        {            togglePause();        }    }}void APBApp::togglePause(){    paused  = paused ? false : true;}